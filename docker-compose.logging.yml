services:
  # installation order follows: https://www.elastic.co/docs/deploy-manage/deploy/self-managed/install-kibana#installation-order
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PWD}
    ports:
      - "9200:9200"
    networks:
      - elk-net
    volumes:
      - ./logging/snapshot:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD-SHELL", "curl --output /dev/null --silent --head --fail -u elastic:${ELASTIC_PWD} http://elasticsearch:9200" ]
      interval: 10s
      timeout: 10s
      retries: 30

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: logstash
    volumes:
      - ./logging/logstash/pipeline/:/usr/share/logstash/pipeline/
    environment:
      - XPACK_MONITORING_ENABLED=true
      - XPACK_MONITORING_ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - XPACK_MONITORING_ELASTICSEARCH_USERNAME=elastic
      - XPACK_MONITORING_ELASTICSEARCH_PASSWORD=${ELASTIC_PWD}
    ports:
      - "5044:5044"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-net
    healthcheck:
      test: [ "CMD-SHELL", "curl -fs http://localhost:9600/_health_report | grep -q '\"status\":\"green\"'" ]
      interval: 10s
      timeout: 10s
      retries: 30

  kibana_settings:
    depends_on:
      elasticsearch:
        condition: service_healthy
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: kibana_settings
    restart: 'no'
    networks:
      - elk-net
    command: >
      bash -c '
        echo "Setup the kibana_system password";
        start_time=$$(date +%s);
        timeout=60;
        until curl -s -u "elastic:${ELASTIC_PWD}" -X POST http://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${KIBANA_PWD}\"}" -H "Content-Type: application/json" | grep -q "^{}"; do
          if [ $$(($$(date +%s) - $$start_time)) -ge $$timeout ]; then
            echo "Error: Elasticsearch timeout";
            exit 1;
          fi;
          sleep 2;
        done;
      '

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    environment:
      - SERVER_NAME=kibana
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PWD}
      - XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY=asdasdasdsadasdasdasdasdasdasdas
      - XPACK_SECURITY_ENCRYPTIONKEY=asdasdasdsadasdasdasdasdasaaaaaa
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - elk-net
    healthcheck:
      test: [ "CMD-SHELL",  "curl -s -I http://kibana:5601 | grep -q 'HTTP/1.1 302 Found'" ]
      interval: 10s
      timeout: 10s
      retries: 30

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.9.0
    container_name: filebeat
    volumes:
      - './logging/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml'
      - './logging/fakelogs:/var/log/'
    depends_on:
      kibana_settings:
        condition: service_completed_successfully
    networks:
      - elk-net

networks:
  elk-net:
